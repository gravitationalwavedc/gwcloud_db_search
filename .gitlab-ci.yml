services:
  - mysql:5.7


variables:
  MYSQL_DATABASE: "django"
  MYSQL_ROOT_PASSWORD: "root"
  MYSQL_HOST: "mysql"


default:
  image:
    name: ubuntu:20.04
    entrypoint: ["/usr/bin/env"]

  before_script:
    - apt -y update
    - apt -y install apt-utils software-properties-common
    - add-apt-repository --yes ppa:deadsnakes/ppa
    - apt -y install net-tools python3.9 python3.9-venv git build-essential libssl-dev libmysqlclient-dev
    - apt -y upgrade


django-tests:
  stage: test
  script:
    - git submodule update --init --recursive
    - cd src/
    - python3.9 -m pip install -r requirements.txt
    - python3.9 -m pip install mysqlclient
    - python3.9 development-manage.py jenkins --enable-coverage --coverage-rcfile=.coveragerc

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: src/reports/coverage.xml
      junit: src/reports/junit.xml

code-quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    SP_VERSION: 0.85.26
  allow_failure: true
  services:
    - docker:stable-dind
  before_script: []
  script:
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/ci-cd/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json


flake8:
  script:
    - python3.9 -m pip install flake8-gl-codeclimate
    - flake8 --exit-zero --format gl-codeclimate --output-file gl-code-quality-report.json src/
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
